bool palindromeRearranging(string inputString) {
    return input.GroupBy(c => c)
    .Where(letter => letter.Count() % 2 == 1)
    .Count() <= 1; //to account for odd number of letters
}













//without linq
bool palindromeRearranging(string inputString) {
    if (inputString.Length <= 1) {
        return true;
    }
    else {
        for (int i = 1; i < inputString.Length; i++) {
            if (inputString[0] == inputString[i]) {
                return palindromeRearranging(inputString.Substring(1,i-1) + inputString.Substring(i+1, inputString.Length-i-1));
            }
        }
        for (int i = 2; i < inputString.Length; i++) {
            if (inputString[1] == inputString[i]) {
                return palindromeRearranging(inputString[0] + inputString.Substring(2,i-2) + inputString.Substring(i+1, inputString.Length-i-1));
            }
        }
    }
    return false;
}
